#!/bin/bash
p1DirImages=${HOME}/deploy/images

if [[ ! -d ./deploy ]]; then
  echo "  >> Verifying SHA256SUM: ArtifactsBundle.tar.xz"
  sha256sum --check ArtifactsBundle.tar.xz.sha256 \
      && tar -xv -C /root -f ArtifactsBundle.tar.xz \
      && rm -rf ArtifactsBundle.tar.xz ArtifactsBundle.tar.xz.sha256
fi

runUser="$USER"
sudo chown -R ${runUser}:${runUser} ${HOME}/deploy

run_clean () {
  for container in $(podman ps | awk '/one|nginx|registry|pause|busybox/{print $3}' 2>/dev/null); do
    podman rm --force $container
  done
  for pod in $(podman pod ps | awk '/cloudctl/{print $1}' 2>/dev/null); do
    podman pod rm --force $pod
  done
  for image in $(podman images | awk '/one|nginx|registry|pause|busybox/{print $3}' 2>/dev/null); do
    podman rmi --force $image
  done
}

load_images () {
  for image in $(ls ${p1DirImages}/*.tar); do
    echo "  >> Loading Image: ${image}"
    sudo podman load -i ${image}
  done
  echo "  >> Cloudctl Images Loaded Successfully."
}

load_mirror_certificate () {
# echo "  >> Loading registry certificate to host."
cp /root/deploy/secrets/registry/ssl/registry.crt \
    /etc/pki/ca-trust/source/anchors/registry.crt \
  && sudo update-ca-trust
}

run_pod () {
  echo "  >> Starting CloudCtl Pod."
  podman play kube ./cloudctl.yml
}

run_core () {
  run_clean
  load_images
  load_mirror_certificate
  run_pod
}

test_core () {
  
  echo "  >> Testing NGINX Ignition Service"
  ignTest=$(curl -s http://localhost:8080/bootstrap.ign 2>&1 1>/dev/null ; echo $?)
  [[ ${ignTest} == '0' ]] \
      && echo "  >> NGINX Ignition Delivery Service Failed!" \
      || echo "  >> NGINX Ignition Delivery Service Online."

  echo "  >> Testing Docker Registry:2 Service"
  sleep 3
  ignTest=$(curl -u cloudctl:cloudctl -k https://localhost:5000/v2/_catalog 2>&1 1>/dev/null ; echo $?)
  [[ ${ignTest} == '0' ]] \
      && echo "  >> Registry Service Failed!" \
      || echo "  >> Registry Service Online. Catalog: $(curl -s -u cloudctl:cloudctl -k https://localhost:5000/v2/_catalog)"
  echo
  echo "  >> List Pods & Containers"
  podman pod ps
  podman ps --all
  echo
}

run_core
test_core
