#!/usr/local/bin/ansible-playbook --inventory=inventory.yaml
- name: ' CodeSparta | Koffer | Artifact Bundle Utility | collector-operators | operators.yml' 
  hosts: koffer
  become: yes
  vars:
  vars_files:
    - 'vars/global.yml'
    - 'vars/catalog.yml'
  vars:
    module: "operators"
    ansible_name_module: " {{ ansible_name }} | {{ module }}"
    dir_bundle_location: "/root/bundle"
    operator_registres_to_mirror:
       redhat-operators: 
         source: registry.redhat.io/redhat/redhat-operator-index:v4.6
         container_port: 50051

  tasks:

    - name: '{{ ansible_name_module }} | podman:run | Start operator-index container '
      command: podman run -d --name operator_collector_{{ item.key  }} \
        -p {{ item.value.container_port }}:{{ item.value.container_port }}  {{ item.value.source }}
      with_dict:
        - "{{ operator_registres_to_mirror }}"
      when:
        - item.key is defined and item.key != ""
        - item.value.source is defined and item.value.source != ""
        - item.value.container_port is defined and item.value.container_port|int > 0

    ### adding extra timeout here to wait for all containers to come up and be bound
    - name: '{{ ansible_name_module }} | command | wait for all containers to be created'
      wait_for:
        timeout: "{{ (operator_registres_to_mirror | length) * 5 }}"
      delegate_to: localhost


    - name: '{{ ansible_name_module }} | file:state=directory | Ensure Archive directory exist '
      file:
        path: "{{ dir_bundle_location }}"
        state: directory
        recurse: true

    - name: '{{ ansible_name_module }} | Create Package index '
      shell: >
        grpcurl -plaintext localhost:{{ item.value.container_port }} api.Registry/ListPackages \
        > {{ dir_bundle_location | d('/tmp') }}/packages-{{ item.key }}.out
      with_dict:
        - "{{ operator_registres_to_mirror }}"
      when:
        - item.key is defined and item.key != ""
        - item.value.container_port is defined and item.value.container_port|int > 0
      register: pkg_idx_out

    - name: '{{ ansible_name_module }} | opm:index:prune | prune package index '
      block:
        - name: '{{ ansible_name_module }} | opm:index:prune | update operator index image '
          command: >
            opm index prune \
            -f {{ item.value.source }} \
            -p {{ item.value.operator_pull_list }} \
            -t localhost:5000/{{ item.key }}/{{ item.value.source.split('/')[2] }}
          with_dict:
            - "{{ operator_registres_to_mirror }}"
          when:
            - item.key is defined and item.key != ""
            - item.value.source is defined and item.value.source != ""
            - item.value.operator_pull_list is defined and item.value.operator_pull_list != ""

        - name: '{{ ansible_name_module }} | podman:push | push updated operator index image'
          command: >
            podman push --tls-verify=false localhost:5000/{{ item.key }}/{{ item.value.source.split('/')[2] }}
          with_dict:
            - "{{ operator_registres_to_mirror }}"
          when:
            - item.key is defined and item.key != ""
            - item.value.source is defined and item.value.source != ""
            - item.value.operator_pull_list is defined and item.value.operator_pull_list != ""


    - name: '{{ ansible_name_module }} | skopeo:copy | create operator index image bundle '
      block:
        - name: '{{ ansible_name_module }} | podman:tag | tag operator index image'
          command: >
            podman tag {{ item.value.source }} \
            localhost:5000/{{ item.key }}/{{ item.value.source.split('/')[2] }}
          with_dict:
            - "{{ operator_registres_to_mirror }}"
          when:
            - item.key is defined and item.key != ""
            - item.value.source is defined and item.value.source != ""
            - not item.value.operator_pull_list is defined or (item.value.operator_pull_list is defined and item.value.operator_pull_list == "")

        - name: '{{ ansible_name_module }} | podman:push | push operator index bundle'
          command: >
            podman push --tls-verify=false localhost:5000/{{ item.key }}/{{ item.value.source.split('/')[2] }}
          with_dict:
            - "{{ operator_registres_to_mirror }}"
          when:
            - item.key is defined and item.key != ""
            - item.value.source is defined and item.value.source != ""
            - not item.value.operator_pull_list is defined or (item.value.operator_pull_list is defined and item.value.operator_pull_list == "")

    - name: '{{ ansible_name_module }} | Mirror operator catalog | local registry '
      block:
        - name: '{{ ansible_name_module }} | Mirror operator catalog | login to registries'
          command: podman login {{ item.value.source }}
          with_dict:
            - "{{ operator_registres_to_mirror }}"
          when:
            - item.key is defined and item.key != ""
            - item.value.source is defined and item.value.source != ""
          register: registries_login

        - name: '{{ ansible_name_module }} | Mirror operator catalog | oc:adm:catalog:mirror'
          command: >
            oc adm catalog mirror localhost:5000/{{ item.key }}/{{ item.value.source.split('/')[2] }} \
             localhost:5000/{{ item.key }} \
            -a {{ ocp_registry_pull_secret_file }} \
             --filter-by-os="linux/amd64" \
             --insecure
          with_dict:
            - "{{ operator_registres_to_mirror }}"
          when:
            - item.key is defined and item.key != ""
            - item.value.source is defined and item.value.source != ""
          register: catalog_mirrored

    - name: '{{ ansible_name_module }} | archive:xz | create operator image bundle '
      become: yes
      command: > 
        tar -c --use-compress-program='pigz -9' -v \
        -f {{ dir_bundle_location }}/operators-bundle.tar.xz \
         {{ registry_container_dir }}/ 
      args:
        creates: "{{ dir_bundle_location }}/operators-bundle.tar.xz"
        warn: false
        chdir: "{{ registry_container_dir }}/"

  post_tasks:
    - name: '{{ ansible_name_module }} | podman:stop | Stop operator-collector containers '
      command: podman stop operator_collector_{{ item.key }} 
      with_dict:
        - "{{ operator_registres_to_mirror }}"
      when:
        - item.key is defined and item.key != ""
        - item.value.source is defined and item.value.source != ""
        - item.value.container_port is defined and item.value.container_port|int > 0

    - name: '{{ ansible_name_module }} | podman:rm | Remove operator-index container '
      command: podman rm -f operator_collector_{{ item.key }} 
      with_dict:
        - "{{ operator_registres_to_mirror }}"
      when:
        - item.key is defined and item.key != ""
        - item.value.source is defined and item.value.source != ""
        - item.value.container_port is defined and item.value.container_port|int > 0

    - name: '{{ ansible_name_module }} | podman:stop | Stop mirror-registry '
      command: podman stop {{ registry_container_name | d('mirror-registry') }} 

    - name: '{{ ansible_name_module }} | podman:rm | Remove mirror-registry '
      command: podman rm -f {{ registry_container_name | d('mirror-registry') }} 
