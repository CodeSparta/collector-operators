---
- name: '{{ plugin.name }} | command:opm.index.prune | update operator index image '
  shell:
    cmd: |
      PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin' \
      opm index prune \
        --packages {{ item.value.list }} \
        --from-index {{ item.value.image }} \
        --tag {{ catalog.dest }}/{{ item.value.image.split('/')[1] }}/{{ item.value.image.split('/')[2] }}
  with_dict:
    - "{{ operators }}"
  when:
    - item.value.list is defined and item.value.list != "null" and item.value.list != ""
    - item.value.image is defined and item.value.image != ""

- name: '{{ plugin.name }} | command:podman:push | push updated operator index image'
  shell:
    cmd: |
      PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin' \
      podman push --tls-verify=false {{ catalog.dest }}/{{ item.value.image.split('/')[1] }}/{{ item.value.image.split('/')[2] }}
  with_dict:
    - "{{ operators }}"
  when:
    - item.value.list is defined and item.value.list != "null" and item.value.list != ""
    - item.value.image is defined and item.value.image != ""
    - koffer.mirror or koffer.bundle

- name: '{{ plugin.name }} | command:podman_run | Start operator-index container(s)'
  containers.podman.podman_container:
    name: "{{ item.key }}-catalog"
    image: "{{ catalog.dest }}/{{ item.value.image.split('/')[1] }}/{{ item.value.image.split('/')[2] }}"
    state: "started"
    recreate: "true"
    detach: yes
    publish:
      - "5005{{ item.value.id }}:50051"
  with_dict:
    - "{{ operators }}"
  when:
    - item.key is defined and item.key != ""
    - item.value.list is defined and item.value.list != "null" and item.value.list != ""
    - item.value.image is defined and item.value.image != ""
    - item.value.id is defined and item.value.id|int > 0

- name: '{{ plugin.name }} | wait_for:timeout | Pausing for {{ (operators | length) * 1 }} seconds while catalogs start'
  wait_for:
    timeout: "{{ (operators | length) * 2 }}"

- name: '{{ plugin.name }} | shell:grpcurl | Query catalog api.Registry/ListPackages to build index lists'
  shell:
    cmd: |
      PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin' \
      grpcurl -plaintext localhost:5005{{ item.value.id }} api.Registry/ListPackages | jq .name -r | tee {{ dir.tmp }}/{{ item.key }}-catalog-index-manifests/{{ item.key }}-catalog-operators.list;
  with_dict:
    - "{{ operators }}"
  when:
    - item.key is defined and item.key != ""
    - item.value.list is defined and item.value.list != "null" and item.value.list != ""
    - item.value.image is defined and item.value.image != ""
    - item.value.id is defined and item.value.id|int > 0
  register: pkg_idx_out

- debug:
    msg: 
    - "channel {{ ( item.value.image | regex_replace(':', '/')).split('/')[2] }}"
    - "namespace {{ ( item.value.image | regex_replace(':', '/')).split('/')[1] }}"
  with_dict:
    - "{{ operators }}"

- name: '{{ plugin.name }} | shell:wall-e | Build Manifests with wall-e opm wrapper | CREDIT: @arvin-a https://git.io/Jt9zz'
  shell:
    cmd: |
      PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin' \
      wall-e \
        --opm-path=/bin/opm \
        --icsp-scope=namespace \
        --run-dir={{ dir.tmp }} \
        --catalog-version=1.0.0 \
        --registry-olm={{ catalog.dest }} \
        --registry-catalog={{ catalog.dest }} \
        --authfile={{ default.docker_config }} \
        --operator-channel={{ item.value.image.split(':')[1] }} \
        --operator-file="{{ dir.tmp }}/{{ item.key }}-catalog-index-manifests/{{ item.key }}-catalog-operators.list" \
        --output={{ dir.tmp }}/{{ item.key }}-catalog-index-manifests \
        --operator-catalog-image-url={{ catalog.dest }}/{{ ( item.value.image | regex_replace(':', '/')).split('/')[1] }}/{{ ( item.value.image | regex_replace(':', '/')).split('/')[2] }} \
        --mirror-images={{ koffer.mirror }}
  args:
    chdir: '/tmp'
  with_dict:
    - "{{ operators }}"
  when:
    - item.value.list is defined and item.value.list != "null" and item.value.list != ""
    - item.value.image is defined and item.value.image != ""

- name: '{{ plugin.name }} | shell:cmd | Build Image Mirror Manifests'
  shell:
    cmd: |
      PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin' \
      oc adm catalog mirror --insecure --manifests-only --to-manifests='{{ dir.tmp }}/{{ item.key }}-catalog-index-manifests' --icsp-scope='registry' --index-filter-by-os='.*' {{ catalog.dest }}/{{ item.value.image.split('/')[1] }}/{{ item.value.image.split('/')[2] }} {{ catalog.dest }}
  args:
    chdir: '{{ dir.tmp }}/{{ item.key }}-catalog-index-manifests'
  with_dict:
    - "{{ operators }}"
  when:
    - item.value.list is defined and item.value.list != "null" and item.value.list != ""
    - item.value.image is defined and item.value.image != ""
- name: '{{ plugin.name }} | command:oc.adm.catalog.mirror | Mirror operator catalog(s) | filter-by-os="linux/amd64"'
  shell:
    cmd: |
      PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin' \
      oc adm catalog mirror --insecure --filter-by-os='linux/amd64' {{ catalog.dest }}/{{ item.value.image.split('/')[1] }}/{{ item.value.image.split('/')[2] }} {{ catalog.dest}}
  with_dict:
    - "{{ operators }}"
  when:
    - item.value.list is defined and item.value.list != "null" and item.value.list != ""
    - item.value.image is defined and item.value.image != ""
    - item.key is defined and item.key != ""
    - koffer.mirror or koffer.bundle
    - not koffer.walle
  register: catalog_mirrored
